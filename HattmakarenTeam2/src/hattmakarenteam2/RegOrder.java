/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hattmakarenteam2;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author axelbrave
 */
public class RegOrder extends javax.swing.JFrame {

      private InfDB idb;

    public RegOrder(InfDB idb) {
        this.idb= idb;
        initComponents();
        hamtaKund ();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jComboBox1 = new javax.swing.JComboBox<>();
        boxKund = new javax.swing.JComboBox<>();
        NyOrderLabel = new javax.swing.JLabel();
        KIDLabel = new javax.swing.JLabel();
        SkapaOrderBtn = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        NyOrderLabel.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 1, 24)); // NOI18N
        NyOrderLabel.setText("Ny Order");

        KIDLabel.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 13)); // NOI18N
        KIDLabel.setText("Kund:");

        SkapaOrderBtn.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 18)); // NOI18N
        SkapaOrderBtn.setText("Skapa Order");
        SkapaOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SkapaOrderBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(KIDLabel)
                        .addGap(18, 18, 18)
                        .addComponent(boxKund, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(SkapaOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(NyOrderLabel)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NyOrderLabel)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KIDLabel)
                    .addComponent(boxKund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(SkapaOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SkapaOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SkapaOrderBtnActionPerformed
       
        try{
            idb=new InfDB("hattProjektet", "3306","hattProjektet","hattkey");
            
            String OrderID = idb.getAutoIncrement("ordrar", "orderID") ;
            String kundNamn = boxKund.getSelectedItem().toString();
            String hamtaKundId = "Select kundiD from Kund where kundNamn = '" +kundNamn+"' ; " ;
            String orderStatus = "Ej påbörjad";
            String orderDatum = LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
            String kundID = idb.fetchSingle(hamtaKundId);
            String fraga = "insert into ordrar values(" +OrderID+"," + kundID + ", ('" + orderStatus + "'),'" + orderDatum + "');";
     
         
            idb.insert(fraga);
           
            nyttFonster();

        }
        catch(InfException ettUndantag){
            JOptionPane.showMessageDialog(null, "Något gick fel!");
        }

    }//GEN-LAST:event_SkapaOrderBtnActionPerformed

    
    
   private void hamtaKund () 
   {
      String hamtakund = "Select kundNamn from Kund"; 
      
                  ArrayList<String> Kunder;

       try {
             
            Kunder = idb.fetchColumn(hamtakund);
                
                for (String enKund : Kunder){
                                 
                     boxKund.addItem(enKund);
                }
                
                JOptionPane.showMessageDialog(null, "Ny order har skapats!");
            }
        
        
        catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel, ingen order skapades!");
        }
       
   }
    
    
    
    private void nyttFonster()
    {
      new RegisteraSpecialhatt(idb).setVisible(true);

    }
  
    
       public static String getKund()
    {
     return boxKund.getSelectedItem().toString();
    
    
    
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel KIDLabel;
    private javax.swing.JLabel NyOrderLabel;
    public static javax.swing.JButton SkapaOrderBtn;
    public static javax.swing.JComboBox<String> boxKund;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox<String> jComboBox1;
    // End of variables declaration//GEN-END:variables
}
